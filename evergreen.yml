#######################################
#              Parameters             #
#######################################
parameters:
  - key: hash
    value: 2230334f0369ea999b8fd2ada0de61e4b4a6e2b0
    description: default value until I can figure out Inter-project Dependencies
  - key: version
    value: 1.2.2
    description: default value, should be passed in via command line or Inter-project

#######################################
#              Functions              #
#######################################
functions:
  get-bins:
    command: subprocess.exec
    params:
      command: ./unpackBins.sh ${hash}
      working_dir: curatorbin/curatorbin

  upload-to-testpypi:
    - command: subprocess.exec
      params:
        command: pip3 install -q build twine
        working_dir: curatorbin
    - command: subprocess.exec
      params:
        command: python3 -m build
        working_dir: curatorbin
    - command: subprocess.exec
      params:
        command: python3 -m twine upload --repository testpypi -u __token__ -p ${testpypi_pwd} dist/*
        working_dir: curatorbin

  upload-to-pypi:
    - command: subprocess.exec
      params:
        command: pip3 install -q build twine
        working_dir: curatorbin
    - command: subprocess.exec
      params:
        command: python3 -m build
        working_dir: curatorbin
    - command: subprocess.exec
      params:
        command: python3 -m twine upload -u __token__ -p ${pypi_pwd} dist/*
        working_dir: curatorbin


#######################################
#                Tasks                #
#######################################
tasks:

  - name: publish-to-testpypi
    commands:
      - command: git.get_project
        params:
          directory: curatorbin
      - func: get-bins
      - func: upload-to-testpypi

  - name: publish-to-pypi
    patchable: false
    commands:
      - command: git.get_project
        params:
          directory: curatorbin
      - func: get-bins
      - func: upload-to-pypi
    depends_on:
      - name: test-from-pypi
        variant: ubuntu2004
        status: success
      - name: test-from-pypi
        variant: macos
        status: success
      - name: test-from-pypi-windows
        variant: windows
        status: success

  - name: test-from-pypi
    commands:
      - command: git.get_project
        type: setup
        params:
          directory: curatorbin
      - command: subprocess.exec
        params:
          command: pip3 install pytest
      - command: subprocess.exec
        params:
          command: pip3 install -vvv -i https://test.pypi.org/simple/ curatorbin==${version}
      - command: subprocess.exec
        params:
          command: python3 -m pytest
          working_dir: curatorbin/testdir
    depends_on:
      - name: publish-to-testpypi
        variant: ubuntu2004
        status: "*"

  - name: test-from-pypi-windows
    commands:
      - command: git.get_project
        type: setup
        params:
          directory: curatorbin
      - command: subprocess.exec
        params:
          command: pip3 install pytest
      - command: subprocess.exec
        params:
          command: pip3 install -vvv -i https://test.pypi.org/simple/ curatorbin==${version}
      - command: subprocess.exec
        params:
          command: 'c:\\python39\\python.exe -m pytest'
          working_dir: curatorbin/testdir
    depends_on:
      - name: publish-to-testpypi
        variant: ubuntu2004
        status: "*"

#######################################
#           Buildvariants             #
#######################################
buildvariants:

  - name: ubuntu2004
    display_name: Ubuntu 20.04
    run_on:
      - ubuntu2004-small
    tasks:
      - publish-to-testpypi
      - publish-to-pypi
      - test-from-pypi

  - name: ubuntu2004-arm64
    display_name: Ubuntu 20.04 ARM
    run_on:
      - ubuntu2004-arm64-small
    tasks:
      - test-from-pypi

  - name: macos
    display_name: macOS 10.14
    expansions:
      test_timeout: 15m
    run_on:
      - macos-1014
      - macos-1015
    tasks:
      - test-from-pypi

  - name: macos-arm64
    display_name: macOS 11 ARM
    expansions:
      test_timeout: 15m
    run_on:
      - macos-1100-arm64
    tasks:
      - test-from-pypi

  - name: windows
    display_name: Windows
    run_on:
      - windows-64-vs2017-small
      - windows-64-vs2019-small
      - windows-64-vs2019-large
      - windows-64-vs2017-large
    expansions:
      test_timeout: 15m
    tasks:
      - test-from-pypi-windows
